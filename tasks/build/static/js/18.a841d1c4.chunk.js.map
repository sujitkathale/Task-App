{"version":3,"sources":["components/Register.js"],"names":["toast","configure","regForEmail","RegExp","Register","useState","fname","setFname","lname","setLname","mobile","setMobile","email","setEmail","gender","setGender","password","setPassword","confirmpassword","setConfirmpassword","History","useHistory","className","src","width","height","Group","Control","type","placeholder","name","id","onChange","event","target","value","required","length","test","onClick","data","addUser","then","res","err","error","position","POSITION","TOP_CENTER","failure","success","msg","push","to"],"mappings":"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","file":"static/js/18.a841d1c4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { addUser } from \"../config/MyService\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\nconst regForEmail = RegExp(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\n\nexport default function Register() {\n  let [fname, setFname] = useState(\"\");\n  let [lname, setLname] = useState(\"\");\n  let [mobile, setMobile] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [gender, setGender] = useState(\"\");\n\n  let [password, setPassword] = useState(\"\");\n  let [confirmpassword, setConfirmpassword] = useState(\"\");\n  const success = (data) =>\n    toast.success(data, { position: toast.POSITION.TOP_CENTER });\n  const failure = (data) =>\n    toast.error(data, { position: toast.POSITION.TOP_CENTER });\n  const warning = (data) =>\n    toast.warn(data, { position: toast.POSITION.TOP_CENTER });\n\n  const History = useHistory();\n  const register = () => {\n    let data = {\n      name: fname,\n      lname: lname,\n      mobile: mobile,\n      email: email,\n      password: password,\n      gender: gender,\n      // confirmpassword: confirmpassword,\n    };\n\n    addUser(data).then((res) => {\n      if (res.data.err) {\n        failure(res.data.err);\n      } else {\n        success(res.data.msg);\n        History.push(\"/\");\n      }\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-lg-4\">\n          <img src=\"images/13.jpg\" width={\"550px\"} height={\"820px\"} />\n        </div>\n        <div className=\" col-md-12 col-lg-8 col-sm-12 block\">\n          <br />\n\n          <div className=\"  border cardll \">\n            <h3 className=\"text-uppercase text-center\">\n              Register to <strong className=\"text-danger\">TASKMANAGER</strong>\n            </h3>\n            <br />\n\n            <Form className=\"cardll text-uppercase\">\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  className=\"block\"\n                  type=\"text\"\n                  placeholder=\"Enter First Name\"\n                  name=\"fname\"\n                  id=\"fname\"\n                  onChange={(event) => {\n                    setFname(event.target.value);\n                  }}\n                  required\n                />\n                {fname != \"\" && fname.length < 4 && (\n                  <span className=\"text-danger\">Enter firstName correctly</span>\n                )}\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  className=\"block\"\n                  type=\"text\"\n                  placeholder=\"Enter Last Name\"\n                  name=\"lname\"\n                  id=\"lname\"\n                  onChange={(event) => {\n                    setLname(event.target.value);\n                  }}\n                  required\n                />\n                {lname != \"\" && lname.length < 4 && (\n                  <span className=\"text-danger\">Enter lastName correctly</span>\n                )}\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  type=\"number\"\n                  className=\"block\"\n                  placeholder=\"Enter Mobile Number\"\n                  name=\"mobile\"\n                  id=\"mobile\"\n                  onChange={(event) => {\n                    setMobile(event.target.value);\n                  }}\n                  required\n                />\n                {mobile != \"\" && mobile.length < 10 && (\n                  <span className=\"text-danger\">Enter mobile correctly</span>\n                )}\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  type=\"email\"\n                  className=\"block\"\n                  placeholder=\"Enter Email\"\n                  name=\"email\"\n                  id=\"email\"\n                  onChange={(event) => {\n                    setEmail(event.target.value);\n                  }}\n                  required\n                />\n                {email != \"\" && !regForEmail.test(email) && (\n                  <span className=\"text-danger\">Enter email correctly</span>\n                )}\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  type=\"password\"\n                  className=\"block\"\n                  placeholder=\"Enter Password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={(event) => {\n                    setPassword(event.target.value);\n                  }}\n                  required\n                />\n                {password != \"\" && password.length < 8 && (\n                  <span className=\"text-danger\">Enter password correctly</span>\n                )}\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\">\n                <Form.Control\n                  type=\"password\"\n                  className=\"block\"\n                  placeholder=\"Enter ConfirmPassword\"\n                  name=\"confirmpassword\"\n                  id=\"confirmpassword\"\n                  onChange={(event) => {\n                    setConfirmpassword(event.target.value);\n                  }}\n                  required\n                />\n                {confirmpassword != \"\" && confirmpassword != password && (\n                  <span className=\"text-danger\">Passwords doesn't match</span>\n                )}\n              </Form.Group>\n              <br />\n\n              <div className=\" mb-3\">\n                <label className=\"pr-2\">Gender:</label>\n                <div className=\"mt-1 pl-2 form-check-inline\">\n                  <input\n                    type=\"radio\"\n                    value=\"Male\"\n                    name=\"gender\"\n                    onChange={(event) => {\n                      setGender(event.target.value);\n                    }}\n                  />\n                  <label className=\"mt-1 pl-2 form-check-label\">Male</label>\n                </div>\n                <div className=\"mt-1 pl-2 form-check-inline\">\n                  <input\n                    type=\"radio\"\n                    value=\"Female\"\n                    name=\"gender\"\n                    onChange={(event) => {\n                      setGender(event.target.value);\n                    }}\n                  />\n                  <label className=\"mt-1 pl-2 form-check-label\">Female</label>\n                </div>\n                {/* <input\n                  type=\"radio\"\n                  value=\"Male\"\n                  name=\"gender\"\n                  id=\"inlineRadio1\"\n                  // className=\"mt-1 pl-2\"\n                  onChange={(event) => {\n                    setGender(event.target.value);\n                  }}\n                />{\" \"} */}\n                {/* Male &nbsp;\n                <input\n                  type=\"radio\"\n                  value=\"Female\"\n                  name=\"gender\"\n                  id=\"inlineRadio1\"\n                  // className=\"mt-1 pl-2\"\n                  onChange={(event) => {\n                    setGender(event.target.value);\n                  }}\n                />{\" \"}\n                Female */}\n              </div>\n\n              <br />\n\n              <div className=\"text-center \">\n                <btn className=\"btn  btnlog\" onClick={register}>\n                  Register\n                </btn>{\" \"}\n                <span>or</span>&nbsp;\n                <a className=\"btn  btnlog\">\n                  <Link to=\"/\" className=\" text-dark text-uppercase\">\n                    Login\n                  </Link>\n                </a>\n              </div>\n            </Form>\n          </div>\n          <div />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}